const path = require('path');
const ExcelJS = require('exceljs');

const getDataForReport = async (file) => {
    let worksheet = null;
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(file.path);

    worksheet = await workbook.getWorksheet(1);

    let listNameColumn = [
        ['Склад отгрузки', 'E'],
        ['SKU', 'G'],
        ['Название товара или услуги', 'H'],
        ['Количество', 'I'],
        ['За продажу или возврат до вычета комиссий и услуг', 'J'],
        ['Комиссия за продажу', 'L'],
        ['Сборка заказа', 'M'],
        ['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)', 'N'],
        ['Магистраль', 'O'],
        ['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)', 'P'],
        ['Обратная магистраль', 'Q'],
        ['Обработка возврата', 'R'],
        ['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)', 'S'],
        ['Обработка невыкупленного товара', 'T'],
        ['Логистика (до 15.04 – плата за доставку КГТ)', 'U'],
        ['Логистика (до 15.04 – плата за возврат КГТ)', 'V'],
    ];

    const columns = {}
    listNameColumn.forEach(([name, columnSymbol]) => {
        console.log(name)
        columns[name] =  worksheet.getColumn(columnSymbol).values;
    });

    // order SKU
    const content = {};
    try {
        columns['SKU'].forEach((sku, i) => {
            if (!content[sku]) {
                content[sku] = {fbo: null, fbs: null}
            }
            let sklad = columns['Склад отгрузки'][i];
            if (sklad) {
                sklad = sklad.toString().trim();
            }
            
            if (sklad === 'FBS') {
                if (!content[sku].fbs) {
                    content[sku].fbs = {};
                    content[sku].fbs['Склад отгрузки'] = columns['Склад отгрузки'][i];
                    content[sku].fbs['SKU'] = columns['SKU'][i];
                    content[sku].fbs['Название товара или услуги'] = columns['Название товара или услуги'][i];
                    content[sku].fbs['Количество'] = Number(columns['Количество'][i]);
                    content[sku].fbs['За продажу или возврат до вычета комиссий и услуг'] = Number(columns['За продажу или возврат до вычета комиссий и услуг'][i]);
                    content[sku].fbs['Комиссия за продажу'] = Number(columns['Комиссия за продажу'][i]);
                    content[sku].fbs['Сборка заказа'] = Number(columns['Сборка заказа'][i]);
                    content[sku].fbs['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'] = Number(columns['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'][i]);
                    content[sku].fbs['Магистраль'] = Number(columns['Магистраль'][i]);
                    content[sku].fbs['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'] = Number(columns['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'][i]);
                    content[sku].fbs['Обратная магистраль'] = Number(columns['Обратная магистраль'][i]);
                    content[sku].fbs['Обработка возврата'] = Number(columns['Обработка возврата'][i]);
                    content[sku].fbs['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'] = Number(columns['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'][i]);
                    content[sku].fbs['Обработка невыкупленного товара'] = Number(columns['Обработка невыкупленного товара'][i]);
                    content[sku].fbs['Логистика (до 15.04 – плата за доставку КГТ)'] = Number(columns['Логистика (до 15.04 – плата за доставку КГТ)'][i]);
                    content[sku].fbs['Логистика (до 15.04 – плата за возврат КГТ)'] = Number(columns['Логистика (до 15.04 – плата за возврат КГТ)'][i]);
                } else {
                    content[sku].fbs['Количество'] += Number(columns['Количество'][i]);
                    content[sku].fbs['За продажу или возврат до вычета комиссий и услуг'] += Number(columns['За продажу или возврат до вычета комиссий и услуг'][i]);
                    content[sku].fbs['Комиссия за продажу'] += Number(columns['Комиссия за продажу'][i]);
                    content[sku].fbs['Сборка заказа'] += Number(columns['Сборка заказа'][i]);
                    content[sku].fbs['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'] += Number(columns['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'][i]);
                    content[sku].fbs['Магистраль'] += Number(columns['Магистраль'][i]);
                    content[sku].fbs['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'] += Number(columns['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'][i]);
                    content[sku].fbs['Обратная магистраль'] += Number(columns['Обратная магистраль'][i]);
                    content[sku].fbs['Обработка возврата'] += Number(columns['Обработка возврата'][i]);
                    content[sku].fbs['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'] += Number(columns['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'][i]);
                    content[sku].fbs['Обработка невыкупленного товара'] += Number(columns['Обработка невыкупленного товара'][i]);
                    content[sku].fbs['Логистика (до 15.04 – плата за доставку КГТ)'] += Number(columns['Логистика (до 15.04 – плата за доставку КГТ)'][i]);
                    content[sku].fbs['Логистика (до 15.04 – плата за возврат КГТ)'] += Number(columns['Логистика (до 15.04 – плата за возврат КГТ)'][i]);
                
                }
            }

            if (sklad === 'FBO') {
                if (!content[sku].fbo) {
                    content[sku].fbo = {};
                    content[sku].fbo['Склад отгрузки'] = columns['Склад отгрузки'][i];
                    content[sku].fbo['SKU'] = columns['SKU'][i];
                    content[sku].fbo['Название товара или услуги'] = columns['Название товара или услуги'][i];
                    content[sku].fbo['Количество'] = Number(columns['Количество'][i]);
                    content[sku].fbo['За продажу или возврат до вычета комиссий и услуг'] = Number(columns['За продажу или возврат до вычета комиссий и услуг'][i]);
                    content[sku].fbo['Комиссия за продажу'] = Number(columns['Комиссия за продажу'][i]);
                    content[sku].fbo['Сборка заказа'] = Number(columns['Сборка заказа'][i]);
                    content[sku].fbo['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'] = Number(columns['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'][i]);
                    content[sku].fbo['Магистраль'] = Number(columns['Магистраль'][i]);
                    content[sku].fbo['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'] = Number(columns['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'][i]);
                    content[sku].fbo['Обратная магистраль'] = Number(columns['Обратная магистраль'][i]);
                    content[sku].fbo['Обработка возврата'] = Number(columns['Обработка возврата'][i]);
                    content[sku].fbo['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'] = Number(columns['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'][i]);
                    content[sku].fbo['Обработка невыкупленного товара'] = Number(columns['Обработка невыкупленного товара'][i]);
                    content[sku].fbo['Логистика (до 15.04 – плата за доставку КГТ)'] = Number(columns['Логистика (до 15.04 – плата за доставку КГТ)'][i]);
                    content[sku].fbo['Логистика (до 15.04 – плата за возврат КГТ)'] = Number(columns['Логистика (до 15.04 – плата за возврат КГТ)'][i]);
                } else {
                    content[sku].fbo['Количество'] += Number(columns['Количество'][i]);
                    content[sku].fbo['За продажу или возврат до вычета комиссий и услуг'] += Number(columns['За продажу или возврат до вычета комиссий и услуг'][i]);
                    content[sku].fbo['Комиссия за продажу'] += Number(columns['Комиссия за продажу'][i]);
                    content[sku].fbo['Сборка заказа'] += Number(columns['Сборка заказа'][i]);
                    content[sku].fbo['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'] += Number(columns['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)'][i]);
                    content[sku].fbo['Магистраль'] += Number(columns['Магистраль'][i]);
                    content[sku].fbo['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'] += Number(columns['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)'][i]);
                    content[sku].fbo['Обратная магистраль'] += Number(columns['Обратная магистраль'][i]);
                    content[sku].fbo['Обработка возврата'] += Number(columns['Обработка возврата'][i]);
                    content[sku].fbo['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'] += Number(columns['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)'][i]);
                    content[sku].fbo['Обработка невыкупленного товара'] += Number(columns['Обработка невыкупленного товара'][i]);
                    content[sku].fbo['Логистика (до 15.04 – плата за доставку КГТ)'] += Number(columns['Логистика (до 15.04 – плата за доставку КГТ)'][i]);
                    content[sku].fbo['Логистика (до 15.04 – плата за возврат КГТ)'] += Number(columns['Логистика (до 15.04 – плата за возврат КГТ)'][i]);
                
                }
            }

        });
    } catch (e) {
        console.log(e);
    }

    return content;
}

const writeReports = async (inputContent) => {
    try {
        const workbook = new ExcelJS.Workbook();

        let worksheet = workbook.addWorksheet('FBO');
        const filePath = path.join(__dirname, '../result.xlsx');

        let columns = {
            'Код': ['Код'],
            'Номенклатура': ['Номенклатура'],
            'ЗЦ': ['ЗЦ'],
            'Продажи, шт.': ['Продажи, шт.'],
            'Выручка, руб.': ['Выручка, руб.'],
            'Продажи в ЗЦ, руб.': ['Продажи в ЗЦ, руб.'],
            'Комиссия МП, руб.': ['Комиссия МП, руб.'],
            'Прибыль, руб.': ['Прибыль, руб.']
        }
        let content = Object.keys(inputContent).map(name => {
            return inputContent[name];
        }).filter(el => (el));
        content.forEach((el) => {
            if (el && el.fbo) {
                columns['Код'].push(el.fbo['SKU']);
                columns['Номенклатура'].push(el.fbo['Название товара или услуги']);
                columns['Продажи, шт.'].push(el.fbo['Количество']);
                columns['Выручка, руб.'].push(el.fbo['За продажу или возврат до вычета комиссий и услуг']);
                columns['Комиссия МП, руб.'].push(
                    el.fbo['Комиссия за продажу']
                    + el.fbo['Сборка заказа']
                    + el.fbo['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)']
                    + el.fbo['Магистраль']
                    + el.fbo['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)']
                    + el.fbo['Обратная магистраль']
                    + el.fbo['Обработка возврата']
                    + el.fbo['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)']
                    + el.fbo['Обработка невыкупленного товара']
                    + el.fbo['Логистика (до 15.04 – плата за доставку КГТ)']
                    + el.fbo['Логистика (до 15.04 – плата за возврат КГТ)']
                );
                console.log(columns['Комиссия МП, руб.'])
            }
        });

        worksheet.getColumn(1).values = columns['Код'];
        worksheet.getColumn(2).values = columns['Номенклатура'];
        worksheet.getColumn(3).values = columns['ЗЦ'];
        worksheet.getColumn(4).values = columns['Продажи, шт.'];
        worksheet.getColumn(5).values = columns['Выручка, руб.'];
        worksheet.getColumn(6).values = columns['Продажи в ЗЦ, руб.'];
        worksheet.getColumn(7).values = columns['Комиссия МП, руб.'];
        worksheet.getColumn(8).values = columns['Прибыль, руб.'];


        worksheet = workbook.addWorksheet('FBS');

        columns = {
            'Код': ['Код'],
            'Номенклатура': ['Номенклатура'],
            'ЗЦ': ['ЗЦ'],
            'Продажи, шт.': ['Продажи, шт.'],
            'Выручка, руб.': ['Выручка, руб.'],
            'Продажи в ЗЦ, руб.': ['Продажи в ЗЦ, руб.'],
            'Комиссия МП, руб.': ['Комиссия МП, руб.'],
            'Прибыль, руб.': ['Прибыль, руб.']
        }
        content = Object.keys(inputContent).map(name => {
            return inputContent[name];
        }).filter(el => (el));
        content.forEach((el) => {
            if (el && el.fbs) {
                columns['Код'].push(el.fbs['SKU']);
                columns['Номенклатура'].push(el.fbs['Название товара или услуги']);
                columns['Продажи, шт.'].push(el.fbs['Количество']);
                columns['Выручка, руб.'].push(el.fbs['За продажу или возврат до вычета комиссий и услуг']);
                columns['Комиссия МП, руб.'].push(
                    el.fbs['Комиссия за продажу']
                    + el.fbs['Сборка заказа']
                    + el.fbs['Обработка отправления (разбивается по товарам пропорционально количеству в отправлении)']
                    + el.fbs['Магистраль']
                    + el.fbs['Последняя миля (разбивается по товарам пропорционально доле цены товара в сумме отправления)']
                    + el.fbs['Обратная магистраль']
                    + el.fbs['Обработка возврата']
                    + el.fbs['Обработка отмененного или невостребованного товара (разбивается по товарам в отправлении в одинаковой пропорции)']
                    + el.fbs['Обработка невыкупленного товара']
                    + el.fbs['Логистика (до 15.04 – плата за доставку КГТ)']
                    + el.fbs['Логистика (до 15.04 – плата за возврат КГТ)']
                );
                console.log(columns['Комиссия МП, руб.'])
            }
        });

        worksheet.getColumn(1).values = columns['Код'];
        worksheet.getColumn(2).values = columns['Номенклатура'];
        worksheet.getColumn(3).values = columns['ЗЦ'];
        worksheet.getColumn(4).values = columns['Продажи, шт.'];
        worksheet.getColumn(5).values = columns['Выручка, руб.'];
        worksheet.getColumn(6).values = columns['Продажи в ЗЦ, руб.'];
        worksheet.getColumn(7).values = columns['Комиссия МП, руб.'];
        worksheet.getColumn(8).values = columns['Прибыль, руб.'];


        await workbook.xlsx.writeFile('./result.xlsx');

    } catch(e) {
        console.log('writeNamesAndPrices');
        console.log(e);
    }
}

module.exports = {
    getDataForReport,
    writeReports
}